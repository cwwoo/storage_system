버추얼 어드레스의 스페이스
함수처럼 일시적으로 돌리는건 스택
계속 데이터를 남겨두는 것은 힙


프로세스와 쓰레드의 차이점
IPC는 보안은 좋지만, 효율성이 낮고 복잡도가 높다

shard: address,code,data,heap, 실행과 상관 없는 것
private: stack register set, 실행하고 변하는 것

페이지 테이블, tlb? 트랜스레이션.. 버퍼..

페이징 기법

페이지 테이블을 다르게 써야 한다
컨텍스트 스위칭, 실행중 개체를 전환 하는 것

Thread는PCB(프로그램카운터블록) tlb를 다시 만들지 않아도 됨
데이터 쉐어, 어드레스, 코드도 복사본을 저장 하지 않아도 되어서 좋음

쓰레드: 라이트웨이트, TCB절약, easy to save data

프로그래스:컨텍스틋흐위치, 페이지테이블

쓰레드 프로그래밍에서 무엇이 어려운가? 동기화의 문제(싱크로나이즈)

아토믹상태를 잃어버려서 문제가 되었음
인스트럭션은 제너럴 해야함
인스트럭션 셋 아키텍처

마이스레드 펑션을 함수로 인덱스?
20만이 출력될 수 있도록, 깃허브에 업로드


프로세스와 스레드ㅜ의차이, 뮤텍스락은 무엇인가?



